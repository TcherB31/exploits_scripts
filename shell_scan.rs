use std::fs::File;
use std::io::{self, BufRead, BufReader};
use std::process::Command;

fn main() {
    let file = File::open("targets.txt").expect("Failed to open targets file");
    let reader = BufReader::new(file);
    for line in reader.lines() {
        let target = line.unwrap();
        println!("Checking target: {}", target);
        let output = Command::new("sh")
            .arg("-c")
            .arg(format!("curl --silent {}", target))
            .output()
            .expect("Failed to execute process");
        io::stdout().write(&output.stdout).unwrap();
        io::stdout().write(&output.stderr).unwrap();
        let exit_status = output.status.code().unwrap();
        if exit_status == 0 {
            println!("Command shell is present on {}", target);
        } else {
            println!("Command shell is not present on {}", target);
        }
    }
}
